datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
  Store     Store?   @relation(fields: [storeId], references: [id])
  storeId   String?
  Orders    Orders[]
  Cart      Cart[]
}

model Store {
  id          String    @id @default(cuid())
  name        String
  description String?
  address     String
  updatedAt   DateTime  @default(now())
  createdAt   DateTime  @default(now())
  products    Product[]
  staff       User[]
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  mediaUrl    String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  products    Product[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  discount    Float
  mediaUrl    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     String
  Orders      Orders[]
  Cart        Cart[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Orders {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

enum Role {
  ADMIN
  USER
}

model Cart {
  id        String   @id @default(cuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  status    Status
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

enum Status {
  CART
  BOUGHT
  DELIEVERED
}
